name: Cross-Platform Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Release, Debug]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.15'
    
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
    
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake
    
    - name: Set up Visual Studio (Windows)
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v2
      
    - name: Configure CMake (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -G "Visual Studio 17 2022" -A x64
    
    - name: Configure CMake (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
    
    - name: Build
      run: |
        cmake --build build --config ${{ matrix.build_type }}
    
    - name: Test (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        cd build
        ctest --output-on-failure
    
    - name: Test (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd build
        ctest --output-on-failure -C ${{ matrix.build_type }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mysh-${{ matrix.os }}-${{ matrix.build_type }}
        path: |
          build/bin/
          build/Release/
          build/Debug/
        if-no-files-found: ignore